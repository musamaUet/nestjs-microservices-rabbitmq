server {
    listen 80;
    server_name localhost;
    root /proxy;

    # this is the internal Docker DNS, cache only for 30s
    resolver 127.0.0.11 valid=30s;

    location /api/auth/ {
        set $upstream http://ordering-auth:3000;

        proxy_pass                      $upstream;
        proxy_http_version              1.1;
        proxy_set_header                Upgrade $http_upgrade;
        proxy_set_header                Connection 'upgrade';
        proxy_set_header                Host $host;proxy_cache_bypass $http_upgrade;
        proxy_pass_request_headers      on;
    }

    location /api/orders/ {
        set $upstream http://ordering-orders:3000;

        proxy_pass                      $upstream;
        proxy_http_version              1.1;
        proxy_set_header                Upgrade $http_upgrade;
        proxy_set_header                Connection 'upgrade';
        proxy_set_header                Host $host;proxy_cache_bypass $http_upgrade;
        proxy_pass_request_headers      on;
    }

    location /api/billing/ {
        # Domain is passed as a variable beacuse if domain is down NGINIX failed to start,
        # By passing as a variable this will trick NGINIX to start even if host is not reachable
        set $upstream http://ordering-billing:3000;

        proxy_pass                      $upstream;
        proxy_http_version              1.1;
        proxy_set_header                Upgrade $http_upgrade;
        proxy_set_header                Connection 'upgrade';
        proxy_set_header                Host $host;proxy_cache_bypass $http_upgrade;
        proxy_pass_request_headers      on;
    }
}